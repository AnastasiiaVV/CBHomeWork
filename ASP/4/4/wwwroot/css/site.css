/*Стиль в CSS представляет правило, которое указывает веб-браузеру,
как надо форматировать элемент. Форматирование может включать установку цвета фона элемента,
установку цвета и типа шрифта и так далее.*/

/*Стили или лучше сказать каскадные таблицы стилей (Cascading Style Sheets) или попросту CSS
определяют его внешний вид.*/

/*Селекторы элементов(тегов)
    При определении такого селектора его стиль будет применяться ко всем элементам
соответствующих данному селектору. То есть выше определенный стиль
будет применяться ко всем элементам <body> на веб-странице*/
body {
    /*  Если название шрифта состоит из нескольких слов, например Segoe UI, то все
    название заключается в кавычки: */
    /*Так, если ни 'Times New Roman',Arial,Helvetica ни Verdana не поддерживаются на компьютере
    пользователя, то будет используется sans-serif - универсальный шрифт без засечек. 
    Если первый указанный шрифт будет поодерживатся браузером то он и принимается как выбранный 
    шрифт
    */
    /* Шрифты с засечками Шрифты с засечками названы так,
    потому что на на концах основных штрихов имеют небольшие засечки.
    Считается, что они подходят для больших кусков текста, так как визуально 
    связывают одну букву с другой, делая текст более читабельным. 
    Распространенные шрифты с засечками: Times, Times New Roman, Georgia, Garamond.*/
    /*Шрифты без засечек В отличие от шрифтов с засечками шрифты из этой группы не имеют засечек.
    Наиболее распространенные шрифты этой группы: Arial, Helvetica, Verdana. */
    font-family: 'Times New Roman', Arial, Helvetica, Verdana, sans-serif;
    /* color Цвет текста , например Тегов <p></p>*/
    color: #fbfbfb;
    /* Параметры radial-gradient(тип градиента(элипс или круг, цвет в центре, цвет по бокам)*/
    /* Знак  # при нажатии на Cntrl + Пробел позволяет выбирать цвет, а если раскрыть меню 
    то позволяет настроить собственный цвет.*/
    background-image: radial-gradient(ellipse, #4283ea, #f1f7f8);
}


a {
color: #808080;
}

header {
    /*Радиальный градиент может иметь две формы: круговую и эллиптическую.
    Эллиптическая форма представляет распространение градиента в виде
    эллипса и задается с помощью ключевого слова ellipse: */
    /* Параметры radial-gradient(тип градиента(элипс или круг, цвет в центре, цвет по бокам)*/
    /* Знак  # при нажатии на Cntrl + Пробел позволяет выбирать цвет, а если раскрыть меню 
    то позволяет настроить собственный цвет.*/
    background-image: radial-gradient(ellipse, #e6baba, #eddada);
    /*  background-color: aliceblue;*/
    /* Свойство padding устанавливает внутренние отступы/поля со всех сторон элемента.
    Область отступов это пространство между содержанием элемента и его границей. 
    в CSS имеются четыре свойства, которые устанавливают отступы для каждой из сторон:
    padding-top: отступ сверху
    padding-bottom: отступ снизу
    padding-left: отступ слева
    padding-right: отступ справа
    Если все четыре значения совпадают, то можно писать указать
    только одно значение для всех отступов:
   */
    padding: 20px;
    /*Свойство margin определяет отступ элемента от других элементов 
    или границы внешнего контейнера. Существуют специальные свойства
    CSS для задания отступов для каждой стороны:
    margin-top: отступ сверху 
    margin-bottom: отступ снизу 
    margin-left: отступ слева 
    margin-right: отступ справа */
    margin: 10px;
}

/*justify-content. Оно выравнивает элементы вдоль основной оси - (при расположении в виде строки по 
горизонтали, при расположении в виде столбца - по вертикали) и принимает следующие значения

flex-start: значение по умолчанию, при котором первый элемент выравнивается по левому краю 
контейнера(при расположении в виде строки) или по верху (при расположении в виде столбца), 
за ним располагается второй элемент и так далее.

flex-end: последний элемент выравнивается по правому краю (при расположении в виде строки) 
или по низу (при расположении в виде столбца) контейнера, за ним выравнивается предпоследний 
элемент и так далее

center: элементы выравниваются по центру

space-between: если в стоке только один элемент или элементы выходят за границы flex-контейнера,
то данное значение аналогично flex-start. В остальных случаях первый элемент выравнивается по 
левому краю (при расположении в виде строки) или по верху (при расположении в виде столбца), 
а последний элемент - по правому краю контейнера (при расположении в виде строки) или по 
низу (при расположении в виде столбца). Все оставшееся пространство между ними равным 
образом распределяется между остальными элементами

space-around: если в строке только один элемент или элементы выходят за пределы контейнера, 
то его действие аналогично значению center. В ином случае элементы равным образом распределяют 
пространство между левым и правым краем контейнера, а расстояние между первым и последним 
элементом и границами контейнера составляет половину расстояния между элементами.
*/


/*center {
    justify-content: center;
}*/

/*a {
    justify-content: center;
}

span {
    justify-content: center;
}*/

footer {
    /* Круговая форма представляет распространение градиента в виде кругов от центра во вне.
    Для этого используется ключевое слово circle: */
    /* Параметры radial-gradient(тип градиента(элипс или круг, цвет в центре, цвет по бокам)*/
    /* Знак  # при нажатии на Cntrl + Пробел позволяет выбирать цвет, а если раскрыть меню 
    то позволяет настроить собственный цвет.*/
    background-image: radial-gradient(circle, #eddada, #efd8b0);
    /*  background-color: honeydew;*/
    /* color Цвет текста , например Тегов <p></p>*/
    color: #808080;
    padding: 20px;
    margin: 10px;
}

/*
    Id селекторы
    Для идентификации уникальных на веб-станице элементов используются идентификаторы,
которые определяются с помощью атрибутов id.
    Например
    <div id="main"></div>
*/
#main {
    padding: 20px;
    margin: 10px;
}

#Shapka {
    /*@*сверху, справа, снизу, слева*@*/
    margin: 5px 5px 10px 20px;
    font-size: 20px;
    font-weight: 700;
    background: rgb(17, 18, 18);
    padding: 10px;
    color: seashell;
    border-radius: 3px;
    border-style: solid;
    /*   Сверху Снизу Слева Справа*/
    border-width: 2px 1px 2px 1px;
    border-right-color: darkcyan;
    border-left-color: darkcyan;
    border-top-color: #008C8C;

    border-bottom-color: #008C8C;
    animation-name: slidein;
    transition: 0.7s;
    /* Свойство border-left позволяет одновременно установить толщину, 
    стиль и цвет левой границы элемента. Значения могут идти в любом порядке,
    разделяясь пробелом, браузер сам определит, какое из них соответствует нужному свойству.*/
    animation-duration: 2.5s;
    animation-iteration-count: 5;
    animation-delay: 0.5s;
}

/*/*Анимации*/
    @keyframes slidein {
        0% {
            background: rgba(98, 120, 226, 0.35);
            /*   Сверху Снизу Слева Справа*/
            border-width: 4px 0px 4px 0px;
            border-right-color: rgba(217, 226, 98, 0.60);
            border-left-color: rgba(162, 98, 226, 0.60);
            border-top-color: rgba(162, 98, 226, 0.60);
            border-bottom-color: rgba(99, 98, 226, 0.35);
        }
     /*   100% {
            background: rgba(98, 120, 226, 0.35);
            border-width: 2px 0px 2px 0px;
            border-right-color: rgba(217, 226, 98, 0.60);
            border-left-color: rgba(162, 98, 226, 0.60);
            border-top-color: rgba(162, 98, 226, 0.60);
            border-bottom-color: rgba(99, 98, 226, 0.35);
        }*/
    }